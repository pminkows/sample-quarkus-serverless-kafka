kafka.bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVERS}

mp.messaging.outgoing.reserve-events.connector = smallrye-kafka
mp.messaging.outgoing.reserve-events.topic = ${KAFKA_TOPIC}
mp.messaging.outgoing.reserve-events.value.serializer = io.quarkus.kafka.client.serialization.ObjectMapperSerializer

quarkus.datasource.db-kind = h2
quarkus.datasource.jdbc.url = jdbc:h2:mem:testdb
quarkus.hibernate-orm.database.generation = drop-and-create

quarkus.kubernetes-client.trust-certs = true

quarkus.kubernetes.deploy = true
quarkus.kubernetes.deployment-target = knative
quarkus.knative.env.vars.kafka-topic = reserve-events
quarkus.knative.env.vars.kafka-bootstrap-servers = my-cluster-kafka-bootstrap.kafka:9092
quarkus.container-image.group = demo-apps
quarkus.container-image.registry = image-registry.openshift-image-registry.svc:5000

quarkus.http.access-log.enabled = true
quarkus.http.access-log.pattern = long